name: CI Build and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        include:
          - os: windows-latest
            generator: Ninja
            compiler: cl
          - os: ubuntu-latest
            generator: "Unix Makefiles"
            compiler: gcc
          - os: macos-latest
            generator: "Unix Makefiles"
            compiler: clang

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v1
        with:
          cmake-version: '3.22'

      - name: Install dependencies
        if: runner.os != 'Windows'
        run: |
          if [[ "$RUNNER_OS" == "Linux" ]]; then
            sudo apt-get update
            sudo apt-get install -y build-essential cmake
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            brew install cmake
          fi

      - name: Configure build
        shell: bash
        run: |
            if [[ "${{ matrix.os }}" == "macos-latest" && "${{ matrix.arch }}" == "arm64" ]]; then
              cmake -S . -B build -G "${{ matrix.generator }}" \
                -DCMAKE_CXX_COMPILER=${{ matrix.compiler }} \
                -DTEST_PRODUCT_KEY_FORGE=ON \
                -DCMAKE_OSX_ARCHITECTURES=arm64
            else
              cmake -S . -B build -G "${{ matrix.generator }}" \
                -DCMAKE_CXX_COMPILER=${{ matrix.compiler }} \
                -DTEST_PRODUCT_KEY_FORGE=ON
            fi

      - name: Build
        run: cmake --build build --config Release

      - name: Run tests
        run: ctest --test-dir build --output-on-failure

      - name: Package
        run: cmake --build build --config Release --target package

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: ProductKeyForge-${{ matrix.os }}
          path: build/*.{zip,tgz}
