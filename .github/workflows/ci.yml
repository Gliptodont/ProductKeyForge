name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        generator: [Ninja, "Unix Makefiles"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up CMake
        uses: cmake/gha-setup-cmake@v3
        with:
          cmake-version: '3.22'

      - name: Set up Ninja (if selected as generator)
        if: matrix.generator == 'Ninja'
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies (Linux and macOS)
        if: matrix.os != 'windows-latest'
        run: |
          sudo apt-get update || brew update
          sudo apt-get install ninja-build -y || brew install ninja

      - name: Configure the project
        run: |
          cmake -S . -B build \
                -G "${{ matrix.generator }}" \
                -DCMAKE_BUILD_TYPE=Release \
                -DTEST_PRODUCT_KEY_FORGE=ON

      - name: Build the project
        run: cmake --build build --config Release

      - name: Run tests
        if: matrix.os != 'windows-latest' # Windows test runner logic here
        run: ctest --test-dir build --output-on-failure

      - name: Run tests on Windows
        if: matrix.os == 'windows-latest'
        run: |
          cd build
          ctest --output-on-failure

      - name: Package the build artifacts
        if: success()
        run: |
          cmake --install build --prefix install

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-build-artifacts
          path: install
